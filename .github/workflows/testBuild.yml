name: Build and deploy apps for testing

on:
  pull_request_target:
   types: [opened, synchronize]

env:
  DEVELOPER_DIR: /Applications/Xcode_14.0.1.app/Contents/Developer

jobs:
  android:
    name: Build and deploy Android
    runs-on: ubuntu-latest
    steps:

      - uses: Expensify/App/.github/actions/composite/setupNode@main

      - uses: ruby/setup-ruby@eae47962baca661befdfd24e4d6c34ade04858f7
        with:
          ruby-version: '2.7'
          bundler-cache: true

      # - name: Decrypt keystore
      #   run: cd android/app && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output my-upload-key.keystore my-upload-key.keystore.gpg
      #   env:
      #     LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      # - name: Decrypt json key
      #   run: cd android/app && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output android-fastlane-json-key.json android-fastlane-json-key.json.gpg
      #   env:
      #     LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}


      - name: Run Fastlane beta test
        id: runFastlaneBetaTest
        run: bundle exec fastlane android build_test
        env:
          S3_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ad-hoc-expensify-cash
          S3_REGION: us-east-1
      
      - uses: actions/upload-artifact@v2
        with:
          name: android
          path: ./android_paths.json

  iOS:
    name: Build and deploy iOS
    runs-on: macos-12
    steps:
      - uses: Expensify/App/.github/actions/composite/setupNode@main

      - uses: ruby/setup-ruby@eae47962baca661befdfd24e4d6c34ade04858f7
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Install cocoapods
        uses: nick-invision/retry@0711ba3d7808574133d713a0d92d2941be03a350
        with:
          timeout_minutes: 10
          max_attempts: 5
          command: cd ios && pod install

      - name: Decrypt profile
        run: cd ios && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output chat_expensify_adhoc.mobileprovision.gpg chat_expensify_adhoc.mobileprovision.gpg.gpg
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Decrypt certificate
        run: cd ios && gpg --quiet --batch --yes --decrypt --passphrase="$LARGE_SECRET_PASSPHRASE" --output Certificates.p12 Certificates.p12.gpg
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}

      - name: Run Fastlane
        run: bundle exec fastlane ios build_test
        env:
          S3_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET: ad-hoc-expensify-cash
          S3_REGION: us-east-1

      - uses: actions/upload-artifact@v2
        with:
          name: ios
          path: ./ios_paths.json
  
  
  # web:
  #   name: Build and deploy Web
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: Expensify/App/.github/actions/composite/setupNode@main

  #     - name: Configure AWS Credentials
  #       # Version: 1.5.5
  #       uses: aws-actions/configure-aws-credentials@e97d7fbc8e0e5af69631c13daa0f4b5a8d88165b
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Build web for staging
  #       run: npm run build-staging

  #     - name: Build docs
  #       run: npm run storybook-build
  #       continue-on-error: true

  #     - name: Deploy to S3 for internal testing
  #       run: aws s3 cp --recursive --acl public-read "$GITHUB_WORKSPACE"/dist s3://aws-upload-test-fastlane/web/"$PULL_REQUEST_NAME"
  #       env:
  #         PULL_REQUEST_NAME: ${{ github.event.pull_request.title }}

  postGithubComment:
    runs-on: ubuntu-latest
    name: An example job to comment a PR
    needs: [android]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/download-artifact@v2

      - name: Read JSONs with paths
        id: set_var
        run: |
          content_android=`cat ./android/android_paths.json`
          content_android="${content_android//'%'/'%25'}"
          content_android="${content_android//$'\n'/'%0A'}"
          content_android="${content_android//$'\r'/'%0D'}"
          echo "::set-output name=android_paths::$content_android"

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            'Hello world ! ${{fromJson(steps.set_var.outputs.android_paths).html_path}}''